{"ast":null,"code":"import { w3cwebsocket as W3CWebSocket } from 'websocket';\nexport default function UseWebSocket() {\n  console.log('before');\n  var client = new W3CWebSocket('ws://localhost:3001/');\n  console.log('hi');\n\n  client.onerror = function () {\n    console.log('Connection Error');\n  };\n\n  client.onopen = function () {\n    console.log('WebSocket Client Connected');\n\n    function sendNumber() {\n      if (client.readyState === client.OPEN) {\n        var number = Math.round(Math.random() * 0xFFFFFF);\n        client.send(number.toString());\n        setTimeout(sendNumber, 1000);\n      }\n    }\n\n    sendNumber();\n  };\n\n  client.onclose = function () {\n    console.log('echo-protocol Client Closed');\n  };\n\n  client.onmessage = function (e) {\n    if (typeof e.data === 'string') {\n      console.log(\"Received: '\" + e.data + \"'\");\n    }\n  };\n}\n_c = UseWebSocket;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseWebSocket\");","map":{"version":3,"sources":["/Users/sheldonrodricks/Desktop/SOFTENG 750/Party-queue/party-queue/frontend/src/websocket/websocket-client.js"],"names":["w3cwebsocket","W3CWebSocket","UseWebSocket","console","log","client","onerror","onopen","sendNumber","readyState","OPEN","number","Math","round","random","send","toString","setTimeout","onclose","onmessage","e","data"],"mappings":"AAAA,SAASA,YAAY,IAAIC,YAAzB,QAA6C,WAA7C;AAEA,eAAe,SAASC,YAAT,GAAwB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,MAAIC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB,sBAAjB,CAAb;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACAC,EAAAA,MAAM,CAACC,OAAP,GAAiB,YAAY;AACzBH,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,GAFD;;AAIAC,EAAAA,MAAM,CAACE,MAAP,GAAgB,YAAY;AACxBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;;AAEA,aAASI,UAAT,GAAsB;AAClB,UAAIH,MAAM,CAACI,UAAP,KAAsBJ,MAAM,CAACK,IAAjC,EAAuC;AACnC,YAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,CAAb;AACAT,QAAAA,MAAM,CAACU,IAAP,CAAYJ,MAAM,CAACK,QAAP,EAAZ;AACAC,QAAAA,UAAU,CAACT,UAAD,EAAa,IAAb,CAAV;AACH;AACJ;;AACDA,IAAAA,UAAU;AACb,GAXD;;AAaAH,EAAAA,MAAM,CAACa,OAAP,GAAiB,YAAY;AACzBf,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH,GAFD;;AAIAC,EAAAA,MAAM,CAACc,SAAP,GAAmB,UAAUC,CAAV,EAAa;AAC5B,QAAI,OAAOA,CAAC,CAACC,IAAT,KAAkB,QAAtB,EAAgC;AAC5BlB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBgB,CAAC,CAACC,IAAlB,GAAyB,GAArC;AACH;AACJ,GAJD;AAKH;KA9BuBnB,Y","sourcesContent":["import { w3cwebsocket as W3CWebSocket } from 'websocket';\n\nexport default function UseWebSocket() {\n    console.log('before');\n    var client = new W3CWebSocket('ws://localhost:3001/');\n    console.log('hi');\n    client.onerror = function () {\n        console.log('Connection Error');\n    };\n\n    client.onopen = function () {\n        console.log('WebSocket Client Connected');\n\n        function sendNumber() {\n            if (client.readyState === client.OPEN) {\n                var number = Math.round(Math.random() * 0xFFFFFF);\n                client.send(number.toString());\n                setTimeout(sendNumber, 1000);\n            }\n        }\n        sendNumber();\n    };\n\n    client.onclose = function () {\n        console.log('echo-protocol Client Closed');\n    };\n\n    client.onmessage = function (e) {\n        if (typeof e.data === 'string') {\n            console.log(\"Received: '\" + e.data + \"'\");\n        }\n    };\n}"]},"metadata":{},"sourceType":"module"}